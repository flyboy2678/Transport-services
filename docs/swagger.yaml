basePath: /v1
definitions:
  main.CreateTripPayload:
    properties:
      available_seats:
        type: integer
      description:
        maxLength: 255
        type: string
      end_date:
        type: string
      location:
        maxLength: 100
        type: string
      name:
        maxLength: 100
        type: string
      price:
        type: number
      seats:
        type: integer
      start_date:
        type: string
    required:
    - available_seats
    - description
    - end_date
    - location
    - name
    - price
    - seats
    - start_date
    type: object
  main.CreateUserPayload:
    properties:
      email:
        maxLength: 255
        type: string
      first_name:
        maxLength: 100
        type: string
      last_name:
        maxLength: 100
        type: string
      password:
        maxLength: 24
        minLength: 8
        type: string
      phone:
        maxLength: 255
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    type: object
  store.Trip:
    properties:
      available_seats:
        type: integer
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      price:
        type: number
      seats:
        type: integer
      start_date:
        type: string
    type: object
  store.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone:
        type: string
    type: object
info:
  contact: {}
  title: Transport Service Api
  version: "1.0"
paths:
  /trips:
    get:
      consumes:
      - application/json
      description: Fetches all trips
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Trip'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Fetches all trips
      tags:
      - trips
    post:
      consumes:
      - application/json
      description: Creates a trip
      parameters:
      - description: Post payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreateTripPayload'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/store.Trip'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Creates a trip
      tags:
      - trips
  /trips/id/{id}:
    get:
      consumes:
      - application/json
      description: Fetches a trip by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Trip'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Fetches a trip by id
      tags:
      - trips
  /trips/location/{location}:
    get:
      consumes:
      - application/json
      description: Fetches a trip by location
      parameters:
      - description: Trip Location
        in: path
        name: location
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Trip'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Fetches a trip by location
      tags:
      - trips
  /trips/upcoming:
    get:
      consumes:
      - application/json
      description: Fetches all upcoming trips
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Trip'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Fetches all upcoming trips
      tags:
      - trips
  /users:
    post:
      consumes:
      - application/json
      description: Creates a user
      parameters:
      - description: Post payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreateUserPayload'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/store.User'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Creates a user
      tags:
      - users
  /users/email/{email}:
    get:
      consumes:
      - application/json
      description: Fetches a user by id
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Fetches a user
      tags:
      - users
  /users/id/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Deletes a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Fetches a user by id
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Fetches a user
      tags:
      - users
swagger: "2.0"
